# install.packages("rlang")
suppressMessages(library(tidyverse))
suppressMessages(library(odbc))
library(tidyverse)
Advertising = read_csv("C:/Users/ellen/OneDrive/Documents/GitHub/EllenwTerry/Foundations/Advertising.csv")
View(Advertising)
library(tidyverse)
Advertising = read_csv("C:/Users/ellen/OneDrive/Documents/GitHub/EllenwTerry/Foundations/Advertising.csv")
Advertising = select(Advertising, TV, Radio, Sales)
mFit <- lm(Sales ~ TV + Radio, data = Advertising)
mFit$coefficients
Advertising$yhat <- predict(mFit, Advertising)
mFit <- lm(Sales ~ TV + Radio, data = Advertising)
mFit$coefficients
Advertising$yhat <- predict(mFit, Advertising)
p = ggplot (aes(x = TV, y = Sales), data = Advertising) +
geom_point(aes(x = TV, y = yhat))
p
# Normal Equations Solution - refer to Python file and Slides
vY <- as.matrix(dplyr::select(Advertising, Sales)) # set up y values in matrix
mX <- as.matrix(cbind(1, dplyr::select(Advertising, TV, Radio))) # set up x values in matrix
vBeta <- solve(t(mX)%*%mX, t(mX)%*%vY) # solve using normal equations
vBeta
str(Advertising)
vBeta2 <- as.numeric(vBeta)
Advertising$neY <- t(vBeta2%*%t(mX)) # 3 columns on left * 3 rows on right (after transpose)
p = p +
geom_point(aes(x = TV, y = neY), data = Advertising, color = "red")
p
library(tidyverse)
Advertising = read_csv("C:/Users/ellen/OneDrive/Documents/GitHub/EllenwTerry/Foundations/Advertising.csv")
Advertising = select(Advertising, TV, Radio, Sales)
mFit <- lm(Sales ~ TV + Radio, data = Advertising)
mFit$coefficients
Advertising$yhat <- predict(mFit, Advertising)
mFit = lm(Sales ~ TV + Radio, data = Advertising)
mFit$coefficients
Advertising$yhat = predict(mFit, Advertising)
sample = sample_n(Advertising, 4)
sample
vBeta <- as.numeric(mFit$coefficients)
mX <- as.matrix(cbind(1, select(sample, TV, Radio))) # set up x values in matrix
vBeta %*% mX
mX
View(Advertising)
Advertising = read_csv("C:/Users/ellen/OneDrive/Documents/GitHub/EllenwTerry/Foundations/Advertising.csv")
Advertising = select(Advertising, TV, Radio, Sales)
mFit <- lm(Sales ~ TV + Radio, data = Advertising)
mFit$coefficients
Advertising$yhat <- predict(mFit, Advertising)
mFit = lm(Sales ~ TV + Radio, data = Advertising)
mFit$coefficients
Advertising$yhat = predict(mFit, Advertising)
Advertising
sample = sample_n(Advertising, 4)
sample
vBeta <- as.numeric(mFit$coefficients)
vBeta
select(sample, TV, Radio)
mX <- as.matrix(cbind(1, select(sample, TV, Radio))) # set up x values in matrix
mX
vBeta %*% mX
vBeta%*%t(mX) # works, but let's transpose it so we can see it better
t(vBeta%*%t(mX)) # gets us there
t(vBeta*t(mX))
(vBeta[1] * t(mX)[1,1]) + (vBeta[2] * t(mX)[2,1]) + (vBeta[3] * t(mX)[3,1])
tmX = t(mX)
tmX
library(tidyverse)
Advertising = read_csv("C:/Users/ellen/OneDrive/Documents/GitHub/EllenwTerry/Foundations/Advertising.csv")
Advertising = select(Advertising, TV, Radio, Sales)
mFit <- lm(Sales ~ TV + Radio, data = Advertising)
mFit$coefficients
Advertising$yhat <- predict(mFit, Advertising)
mFit = lm(Sales ~ TV + Radio, data = Advertising)
mFit$coefficients
Advertising$yhat = predict(mFit, Advertising)
sample = sample_n(Advertising, 4)
sample
View(Advertising)
n = 50
N = 50
library(tidyverse)
N = 50
Data = Data %>% data.frame(X = sample(seq(from = 10, to =40, by = 1), N, replace = TRUE))
Data = data.frame(X = sample(seq(from = 10, to =40, by = 1), N, replace = TRUE))
View(Data)
Beta = 2
library(tidyverse)
N = 50
Beta = 2
Data = data.frame(X = sample(seq(from = 10, to =40, by = 1), N, replace = TRUE))
Data = Data %>% mutate(Y =  (X*Beta))
View(Data)
p = ggplot (aes(x = X, y = Y), data = Data) +
geom_point()
p
